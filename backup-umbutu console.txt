#!/bin/bash

# Variáveis
DOMAIN="hecsolutions.com.br"
NODE_VERSION="lts"
MYSQL_ROOT_PASSWORD="(H&Cs0lutI0ns)"  # Troque por uma senha segura
MYSQL_USER="hec_solutions"
MYSQL_PASSWORD="(H&Cs0lutI0ns)"              # Troque por uma senha segura
MYSQL_DATABASE="db-hec_solutions"

echo "Atualizando pacotes..."
sudo apt update && sudo apt upgrade -y

echo "Instalando dependências básicas..."
sudo apt install curl gnupg2 ca-certificates lsb-release ufw nginx git unzip -y

# =========================
# Node.js + NVM + PM2
# =========================
echo "Instalando Node.js (via NVM)..."
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
export NVM_DIR="$HOME/.nvm"
source "$NVM_DIR/nvm.sh"
nvm install $NODE_VERSION
nvm use $NODE_VERSION
npm install -g pm2

# =========================
# MySQL
# =========================
echo "Instalando MySQL..."
sudo apt install mysql-server -y
sudo systemctl enable mysql
sudo systemctl start mysql

echo "Configurando banco de dados MySQL..."
sudo mysql -e "ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '${MYSQL_ROOT_PASSWORD}';"
sudo mysql -uroot -p${MYSQL_ROOT_PASSWORD} -e "CREATE DATABASE ${MYSQL_DATABASE};"
sudo mysql -uroot -p${MYSQL_ROOT_PASSWORD} -e "CREATE USER '${MYSQL_USER}'@'localhost' IDENTIFIED BY '${MYSQL_PASSWORD}';"
sudo mysql -uroot -p${MYSQL_ROOT_PASSWORD} -e "GRANT ALL PRIVILEGES ON ${MYSQL_DATABASE}.* TO '${MYSQL_USER}'@'localhost';"
sudo mysql -uroot -p${MYSQL_ROOT_PASSWORD} -e "FLUSH PRIVILEGES;"

# =========================
# NGINX + UFW
# =========================
echo "Configurando Nginx e Firewall..."
sudo ufw allow OpenSSH
sudo ufw allow 'Nginx Full'
sudo ufw allow 3000/tcp  # Porta comum de apps Node.js
sudo ufw --force enable

echo "Criando configuração Nginx..."
NGINX_CONF="/etc/nginx/sites-available/${DOMAIN}"

sudo bash -c "cat > ${NGINX_CONF}" <<EOF
server {
    listen 80;
    server_name ${DOMAIN};

    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host \$host;
        proxy_cache_bypass \$http_upgrade;
    }
}
EOF

echo "Ativando configuração do Nginx..."
sudo ln -s ${NGINX_CONF} /etc/nginx/sites-enabled/
sudo nginx -t && sudo systemctl restart nginx

# =========================
# Let's Encrypt SSL
# =========================
echo "Instalando Certbot e configurando SSL..."
sudo apt install certbot python3-certbot-nginx -y
sudo certbot --nginx -d ${DOMAIN} --non-interactive --agree-tos -m admin@${DOMAIN}

# =========================
# Finalizando
# =========================
echo "Setup concluído com sucesso!"
echo "Agora clone seu projeto Node.js, use PM2 para rodar e acesse https://${DOMAIN}"